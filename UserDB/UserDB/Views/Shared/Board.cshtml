@model UserDB.Models.Board

@{
    ViewBag.Title = "Board";
    UserDB.Models.Board b = new UserDB.Models.Board(); //instantiate board
    {
<<<<<<< HEAD
                <link href="~/Content/pop_up_style.css" rel="stylesheet" type="text/css" />
                <div id="blanket" style="display:none;"></div>
                <div id="popUpDiv" style="display:none;"></div>
                <div id="wrapper" style="text-align: center; margin: -30px 0px 52px -1363px;">
                  <img id="imgbg" class="img-responsive" src="/" style="position: absolute;" />
                </div>
                <link href="~/Content/Board.css" rel="stylesheet" type="text/css" />
                <h2 class="instruction">Find as many words as possible in ONE MINUTE!</h2>
                <div style="text-align: center;">
                    <span id="countdown" class="timer">&nbsp;</span>
                </div>
                <br />
                <div id="boardDiv" style="position: relative; z-index: 10;">
                    <label class="processedWord" id="processedWord">&nbsp;</label>
                        <table>
                            @for (int i = 1; i < 8; i++)
=======
        <html>
        
        <head>
            <title>Game</title>
            <script src="~/scripts/TileMappings.js" type="text/javascript"></script>
            <script src="~/scripts/jquery-1.9.1.js" type="text/javascript"></script>
            <script type="text/javascript">
                function submitWord() {
                    //Pull IDS of letters to transmit as "word"
                    var fullWord = letters.join("");
                    var newScore = wordScore;

                    //Synchronous AJAX call to pass word from board view to the boardcontroller for word checking service
                    $.ajax({
                        type: "GET",
                        url: "/Board/checkWord",
                        data: { word: fullWord },
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (result) {
                            //$('.processedWord').html(fullWord);
                            finishSubmit(result, fullWord, newScore);
                        },
                        error: function (data) {
                            //$('.processedWord').html(fullWord);
                            window.alert("Failure");
                        }
                    });
                }

                function finishSubmit(result, word, score) {
                    if (result) {
                        // Jquery to set the last submitted word and the score
                        $("#ws").text("Last Word Score: " + score);
                        $("#lsw").text("Last Sumitted Word: " + word);
                        for (var i = 0; i < wordIds.length; i++) {
                            document.getElementById(wordIds[i]).disabled = true;
                            document.getElementById(wordIds[i]).setAttribute("style", "visibility:hidden;");
                            //document.getElementById(wordIds[i]).setAttribute("style", "background-color:maroon; color:gold;");
                        }

                    }
                    else {
                        score = 0;
                        // Jquery to set the last submitted word and the score 
                        $("#ws").text("Last Word Score: 0");
                        $("#lsw").text("Last Sumitted Word: " + word);
                        for (var i = 0; i < wordIds.length; i++) {
                            document.getElementById(wordIds[i]).setAttribute("style", "background-color:white; color:black;");
                            document.getElementById(wordIds[i]).setAttribute("data-owner", "EMPTY");
                        }
                    }

                    letters = [];
                    wordIds = [];
                    totalScore += score;
                    // Jquery to select total score label and modify it
                    $("#ts").text("Total Score: " + totalScore);
                    wordScore = 0;
                }
            </script>
        </head>
        <body onLoad="window.scroll(0, 140)">

            <link href="~/Content/pop_up_style.css" rel="stylesheet" type="text/css" />
            <script type="text/javascript" src="~/scripts/popup.js"></script>

            <div id="blanket" style="display:none;"></div>
            <div id="popUpDiv" style="display:none;"></div>
            <div id="wrapper" style="text-align: center; margin: -30px 0px 52px -1363px;">
                <img id="imgbg" src="/" style="position: absolute;" /></div>
            <script>
                // Synchronous AJAX call to get the user's university name and change the background of the 
                // game board accordingly. The GetUserSchool method is a HTTPGet method found in the homecontroller.cs
                // file. If the GetUserSchool Method returns null, an alert view will be present. 
                var school = "undefined";
                $.ajax({
                    type: "GET",
                    url: "/Home/GetUserSchool",
                    contentType: "application/json; charset=utf-8",
                    async: false,
                    success: function (data) {
                        if(data)
                        {
                            school = data;
                        }
                    },
                    error: function (data) {
                        if(!data)
                        {
                            window.alert("Failure getting school name");
                        }   
                    }
                });
                
                // Change background depending on school name
                // Neutral background if null is returned
                if (school == "ASU") {
                    // ASU background
                    document.getElementById('body').setAttribute("style", "background-color:#6c0018; padding-bottom: 85px;");
                    document.getElementById('imgbg').setAttribute("src", "../Images/bg-asu2.png");
                }
                else if (school == "UofA") {
                    // U of A background
                    document.getElementById('body').setAttribute("style", "background-color:#003366; padding-bottom: 85px;");
                    document.getElementById('imgbg').setAttribute("src", "../Images/bg-uofa2.png");
                }
                else {
                    // undefined school
                    document.getElementById('body').setAttribute("style", "background-color:#333333; padding-bottom: 85px;");
                    document.getElementById('imgbg').setAttribute("style", "visibility:hidden;");
                }

                // After the game is complete an asynchronous AJAX call will be made to the UpdateUserScore method
                // in the homecontroller.cs file. It sends an integer value to replace the current score table data found in 
                // the UserProfile database. The user will then be redirected to the home page.
                setInterval(function () {
                    $.ajax({
                        type: "GET",
                        url: "/Home/UpdateUserScore",
                        data: { score: totalScore },
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                        },
                        error: function (data) {
                            if(!data)
                            {
                                window.alert("Failure updating score");
                            }   
                        }
                    });
                    window.location.href = "http://localhost:60776/";
                }, 65000);
                setInterval(function ()
                {
                    popup('popUpDiv');
                }, 61200);
            </script>

            <link href="~/Content/Board.css" rel="stylesheet" type="text/css" />
            <h4>Find as many words as possible in ONE MINUTE!</h4>
            <div style="text-align: center;">
            <span id="countdown" class="timer">&nbsp;</span>
            </div>

            
            <script type="text/javascript">
                //Timer implementation. Updates countdown timer
                var seconds = 60;
                function secondPassed() {
                    var minutes = Math.round((seconds - 30) / 60);
                    var remainingSeconds = seconds % 60;
                    if (remainingSeconds < 10) {
                        remainingSeconds = "0" + remainingSeconds;
                    }
                    document.getElementById('countdown').innerHTML = minutes + ":" + remainingSeconds;
                    if (seconds == 0) {
                        clearInterval(countdownTimer);
                        //document.getElementById('countdown').innerHTML = "TIME'S UP!";
                        document.getElementById('countdown').setAttribute("style", "color:red;");
                    } else {
                        seconds--;
                    }
                }

                var countdownTimer = setInterval('secondPassed()', 1000);
            </script>
            <br />
            <div id="boardDiv" style="position: relative; z-index: 10;">
            <label class="processedWord" id="processedWord">&nbsp;</label>
                <table>
                    @for (int i = 1; i < 8; i++)
                    {
                        <tr>
                            @for (int j = 1; j < 8; j++)
>>>>>>> 44944e98cadb1322e0e5123c86f15c8d25234501
                            {
                                <tr>
                                    @for (int j = 1; j < 8; j++)
                                    {
                                        <td>
                                            @{
                                        string id = i.ToString() + "." + j.ToString();
                                            }
                                            <button id=@(id) data-owner="EMPTY" data-letter=@(b.tArray[i-1, j-1].getValue()) data-score=@(b.tArray[i-1, j-1].getScore()) onclick="clicked(@(id))">@(b.tArray[i-1, j-1].getValue())</button>
                                        </td>
                                    }
                                </tr>
                            }
                        </table>
                    <button type="button" style="width:150px; height:40px; margin: 8px 0px 0px 134px;" onclick="submitWord()">Submit Word</button>
                </div>
                <!--This is where all the labels are located for Jquery manipulation-->
                <div id="labels" style="text-align:right">
                    <h3 id="ts" style="color:white">Total Score: </h3>
                    <h3 id="lsw" style="color:white">Last Submitted Word: </h3>
                    <h3 id="ws" style="color:white">Last Word Score: </h3>
                </div>
                <script src="~/scripts/TileMappings.js" type="text/javascript"></script>
                <script src="~/scripts/jquery-1.9.1.js" type="text/javascript"></script>
                <script type="text/javascript" src="~/Scripts/SubmitWord.js"></script>
                <script type="text/javascript" src="~/Scripts/Timer.js"></script>
                <script type="text/javascript" src="~/Scripts/GetBackground.js"></script>
                <script type="text/javascript" src="~/scripts/popup.js"></script>
    }
}
